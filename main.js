(()=>{"use strict";function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var t=function(){function t(e,n,r,o,i,u){var a=u.addLike,c=u.delLike;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),this._data=e,this.dataId=e._id,this._ownerId=e.owner._id,this._likes=e.likes,this._id=i,this._cardSelector=n,this._name=e.name,this._link=e.link,this._openPopupImg=r,this._delLike=c,this._addLike=a,this._popupDeleteCard=o}var n,r;return n=t,(r=[{key:"_getTemplate",value:function(){return document.querySelector(this._cardSelector).content.querySelector(".element").cloneNode(!0)}},{key:"handleLikeCard",value:function(e){this._element.querySelector(".element__counter").textContent=e.length}},{key:"handleDeleteLikeCard",value:function(e){this._element.querySelector(".element__counter").textContent=e.length}},{key:"addClassLikeCard",value:function(){this._elementLike.classList.add("element__like_active")}},{key:"deleteClassLikeCard",value:function(){this._elementLike.classList.remove("element__like_active")}},{key:"_setEventListeners",value:function(){var e=this;this._element.querySelector(".element__img").addEventListener("click",(function(){e._openPopupImg(e._name,e._link)})),this._element.querySelector(".element__trash").addEventListener("click",(function(){e._popupDeleteCard.openPopup(e.dataId,e._element)})),this._elementLike.addEventListener("click",(function(t){t.target.classList.contains("element__like_active")?e._delLike():e._addLike()}))}},{key:"generateCard",value:function(){var e=this;return this._element=this._getTemplate(),this._elementLike=this._element.querySelector(".element__like"),this._element.querySelector(".element__img").src="".concat(this._link),this._element.querySelector(".element__img").alt=this._name,this._element.querySelector(".element__title").textContent=this._name,this._setEventListeners(),this._element.querySelector(".element__counter").textContent=this._likes.length,this._ownerId==this._id&&(this._element.querySelector(".element__trash").style.display="block"),"true"==this._likes.some((function(t){return t._id==e._id})).toString()?this.addClassLikeCard():this.deleteClassLikeCard(),this._element}}])&&e(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),t}();function n(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var r=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._inputLists=t.inputLists,this._errorMessage=t.errorMessage,this._inputTypeError=t.inputTypeError,this._messageErrorActive=t.messageErrorActive,this._btn=t.btn,this._popupInput=t.popupInput,this.btnDisabled=t.btnDisabled,this._popup=t.popup,this._formValid=n,this.button=this._formValid.querySelector(this._btn),this._inputForms=Array.from(this._formValid.querySelectorAll(this._popupInput))}var t,r;return t=e,(r=[{key:"resetValidation",value:function(){var e=this;this.handleToggleButtonState(),this._inputLists.forEach((function(t){e._handleHideInputError(t)}))}},{key:"_handleHasInvalidInput",value:function(){return this._inputForms.some((function(e){return!e.validity.valid}))}},{key:"handleToggleButtonState",value:function(){this._handleHasInvalidInput(this._inputForms)?(this.button.classList.add(this.btnDisabled),this.button.setAttribute("disabled",!0)):(this.button.classList.remove(this.btnDisabled),this.button.removeAttribute("disabled",!1))}},{key:"_handleShowInputError",value:function(e){var t=e.closest(this._popup).querySelector("".concat(this._errorMessage).concat(e.name));e.classList.add(this._inputTypeError),t.textContent=e.validationMessage,t.classList.add(this._messageErrorActive)}},{key:"_handleHideInputError",value:function(e){var t=e.closest(this._popup).querySelector("".concat(this._errorMessage).concat(e.name));e.classList.remove(this._inputTypeError),t.classList.remove(this._messageErrorActive),t.textContent=""}},{key:"_handleIsValid",value:function(e){e.validity.valid?this._handleHideInputError(e):this._handleShowInputError(e)}},{key:"_setEventListeners",value:function(){var e=this;this._inputLists.forEach((function(t){t.addEventListener("input",(function(){e._handleIsValid(t),e.handleToggleButtonState(t)}))}))}},{key:"enableValidation",value:function(){this._setEventListeners()}}])&&n(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),e}();function o(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var i=function(){function e(t,n){var r=t.items,o=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._renderedItems=r,this._renderer=o,this._container=document.querySelector(n)}var t,n;return t=e,(n=[{key:"renderItems",value:function(e){var t=this;e.reverse().forEach((function(e){t._renderer(e)}))}},{key:"addItem",value:function(e){this._container.prepend(e)}}])&&o(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function u(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var a=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.popup=document.querySelector(t),this.popupCloseButton=this.popup.querySelector(".popup__close"),this._handleEscClose=this._handleEscClose.bind(this)}var t,n;return t=e,(n=[{key:"openPopup",value:function(){this.popup.classList.add("popup_active"),document.addEventListener("keydown",this._handleEscClose)}},{key:"closePopup",value:function(){this.popup.classList.remove("popup_active"),document.removeEventListener("keydown",this._handleEscClose)}},{key:"_handleEscClose",value:function(e){"Escape"==e.key&&this.closePopup()}},{key:"setEventListeners",value:function(){var e=this;this.popupCloseButton.addEventListener("click",(function(){e.closePopup(e.popup)})),this.popup.addEventListener("mousedown",(function(t){var n=e.popup.querySelector(".popup__container");t.composedPath().includes(n)||e.closePopup(e.popup)}))}}])&&u(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function c(e){return c="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},c(e)}function s(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function l(){return l="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=p(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},l.apply(this,arguments)}function p(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=d(e)););return e}function f(e,t){return f=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},f(e,t)}function h(e,t){if(t&&("object"===c(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function d(e){return d=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},d(e)}var y=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&f(e,t)}(u,e);var t,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=d(r);if(o){var n=d(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return h(this,e)});function u(e){var t,n=e.selector,r=e.handleFormSubmit;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,u),(t=i.call(this,n)).handleFormSubmit=r,t._inputList=t.popup.querySelectorAll(".popup__input"),t.popupBtn=t.popup.querySelector(".popup__btn"),t.popupBtnTextContent=t.popup.querySelector(".popup__btn").textContent,t.form=t.popup.querySelector(".popup__wrapper"),t}return t=u,(n=[{key:"setInputValues",value:function(e){this._inputList.forEach((function(t){t.value=e[t.name]}))}},{key:"loadMessage",value:function(e){this.popupBtn.textContent=e?"Сохранение...":this.popupBtnTextContent}},{key:"closePopup",value:function(){l(d(u.prototype),"closePopup",this).call(this),this.form.reset()}},{key:"setEventListeners",value:function(){var e=this;l(d(u.prototype),"setEventListeners",this).call(this),this.popup.addEventListener("submit",(function(t){t.preventDefault(),e.handleFormSubmit(e._getInputValues())}))}},{key:"_getInputValues",value:function(){var e=this;return this._formValues={},this._inputList.forEach((function(t){e._formValues[t.name]=t.value})),this._formValues}}])&&s(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),u}(a);function _(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var v=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.title=t.title,this.subtitle=t.subtitle,this.avatar=t.avatar}var t,n;return t=e,(n=[{key:"getUserInfo",value:function(){return{title:this.title.textContent,subtitle:this.subtitle.textContent}}},{key:"setUserInfo",value:function(e){var t=e.name,n=e.about,r=e.avatar,o=e._id;this.title.textContent=t,this.subtitle.textContent=n,this.avatar.src=r,this._id=o}},{key:"setAvatar",value:function(e){this.avatar.src=e.avatar}},{key:"getId",value:function(e){this.id=e._id}},{key:"returnId",value:function(){return this.id}}])&&_(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function b(e){return b="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},b(e)}function m(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function g(){return g="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=k(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},g.apply(this,arguments)}function k(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=S(e)););return e}function w(e,t){return w=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},w(e,t)}function E(e,t){if(t&&("object"===b(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function S(e){return S=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},S(e)}var O=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&w(e,t)}(u,e);var t,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=S(r);if(o){var n=S(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return E(this,e)});function u(e){var t,n=e.selector;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,u),(t=i.call(this,n)).popupImg=t.popup.querySelector(".popup__image"),t.popupSignature=t.popup.querySelector(".popup__signature"),t}return t=u,(n=[{key:"openPopup",value:function(e,t){this.popupImg.src=t,this.popupImg.alt=e,this.popupSignature.textContent=e,g(S(u.prototype),"openPopup",this).call(this)}}])&&m(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),u}(a);function P(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var L=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._host=t,this._token=n,this._getJsonOrError=this._getJsonOrError.bind(this),this._getHeaders=this._getHeaders.bind(this)}var t,n;return t=e,(n=[{key:"_getJsonOrError",value:function(e){if(e.ok)return e.json();throw new Error("Ошибка при загрузке данных")}},{key:"_getHeaders",value:function(){return{authorization:this._token,"content-type":"application/json"}}},{key:"getInfo",value:function(e,t){return fetch("".concat(this._host,"/v1/cohort-47/").concat(e).concat(t),{headers:this._getHeaders()}).then(this._getJsonOrError)}},{key:"getUserData",value:function(){}},{key:"createCard",value:function(e,t){return fetch("".concat(this._host,"/v1/cohort-47/cards"),{method:"POST",headers:this._getHeaders(),body:JSON.stringify({name:e,link:t})}).then(this._getJsonOrError)}},{key:"editProfile",value:function(e,t){return fetch("".concat(this._host,"/v1/cohort-47/users/me"),{method:"PATCH",headers:this._getHeaders(),body:JSON.stringify({name:e,about:t})}).then(this._getJsonOrError).then((function(e){return e}))}},{key:"deleteCard",value:function(e){return fetch("".concat(this._host,"/v1/cohort-47/cards/").concat(e),{method:"DELETE",headers:this._getHeaders()}).then(this._getJsonOrError)}},{key:"addLike",value:function(e){return fetch("".concat(this._host,"/v1/cohort-47/cards/").concat(e,"/likes"),{method:"PUT",headers:this._getHeaders()}).then(this._getJsonOrError)}},{key:"delLike",value:function(e){return fetch("".concat(this._host,"/v1/cohort-47/cards/").concat(e,"/likes"),{method:"DELETE",headers:this._getHeaders()}).then(this._getJsonOrError)}},{key:"editAvatar",value:function(e){return fetch("".concat(this._host,"/v1/cohort-47/users/me/avatar"),{method:"PATCH",headers:this._getHeaders(),body:JSON.stringify({avatar:e})}).then(this._getJsonOrError)}}])&&P(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}(),C=document.querySelector(".popup_form_edit-profile"),j=document.querySelector(".profile__edit-button"),I=(document.querySelector(".popup__input_name"),document.querySelector(".profile__name")),q=document.querySelector(".profile__occupation"),T=(C.querySelector(".popup__input_occupation"),document.querySelector(".popup_form_edit-pictures")),A=document.querySelector(".profile__add-button"),R=document.querySelectorAll(".popup__wrapper"),x=(document.querySelector(".element__trash"),document.querySelector(".popup_form_delete-card"),Array.from(document.querySelectorAll(".popup__input"))),B=document.querySelector(".profile__avatar"),D=document.querySelector(".profile__pic");function V(e){return V="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},V(e)}function H(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function M(){return M="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=J(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},M.apply(this,arguments)}function J(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=N(e)););return e}function F(e,t){return F=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},F(e,t)}function U(e,t){if(t&&("object"===V(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function N(e){return N=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},N(e)}var z=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&F(e,t)}(u,e);var t,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=N(r);if(o){var n=N(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return U(this,e)});function u(e){var t,n=e.selector,r=e.delCard;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,u),(t=i.call(this,n)).popupBtn=t.popup.querySelector(".popup__btn"),t.delCard=r,t}return t=u,(n=[{key:"openPopup",value:function(e,t){this.el=t,this.id=e,M(N(u.prototype),"openPopup",this).call(this)}},{key:"setEventListeners",value:function(){var e=this;this.popupBtn.addEventListener("click",(function(){e.delCard(e.id,e.el)})),M(N(u.prototype),"setEventListeners",this).call(this)}}])&&H(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),u}(a);function $(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var G={title:I,subtitle:q,avatar:B},K={errorMessage:".popup__message-error_",inputLists:x,inputTypeError:"popup__input_type_error",messageErrorActive:"popup__message-error_active",inputElement:".popup__input",btn:".popup__btn",popupInput:".popup__input",btnDisabled:"popup__btn_disabled",popup:".popup__wrapper",host:"https://mesto.nomoreparties.co",token:"35932558-7da7-4b8a-bea3-eca911965720"},Q=new L(K.host,K.token);Promise.all([Q.getInfo("users","/me"),Q.getInfo("cards","")]).then((function(e){var t,n,r=(n=2,function(e){if(Array.isArray(e))return e}(t=e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,o,i=[],u=!0,a=!1;try{for(n=n.call(e);!(u=(r=n.next()).done)&&(i.push(r.value),!t||i.length!==t);u=!0);}catch(e){a=!0,o=e}finally{try{u||null==n.return||n.return()}finally{if(a)throw o}}return i}}(t,n)||function(e,t){if(e){if("string"==typeof e)return $(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?$(e,t):void 0}}(t,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),o=r[0],i=r[1];W.setUserInfo(o),W.getId(o),Y.renderItems(i)})).catch((function(e){console.log(e)}));var W=new v(G),X={};R.forEach((function(e){var t=new r(K,e),n=e.id;X[n]=t,t.enableValidation()}));var Y=new i({items:[],renderer:function(e){var t=Z(e);Y.addItem(t)}},".elements"),Z=function(e){var n=W.returnId(),r=new t(e,"#user",ie,te,n,{addLike:function(){Q.addLike(e._id).then((function(e){r.handleLikeCard(e.likes),r.addClassLikeCard()})).catch((function(e){console.log(e)}))},delLike:function(){Q.delLike(e._id).then((function(e){r.handleDeleteLikeCard(e.likes),r.deleteClassLikeCard()})).catch((function(e){console.log(e)}))}});return r.generateCard()},ee=new y({selector:".popup_form_edit-profile",handleFormSubmit:function(e){ee.loadMessage(!0),Q.editProfile(e.title,e.subtitle).then((function(e){W.setUserInfo(e),ee.closePopup()})).catch((function(e){console.log(e)})).finally((function(){ee.loadMessage(!1)}))}}),te=new z({selector:".popup_form_delete-card",delCard:function(e,t){Q.deleteCard(e).then((function(){t.remove(),te.closePopup()})).catch((function(e){console.log(e)}))}}),ne=new y({selector:".popup_form_edit-pictures",handleFormSubmit:function(e){ne.loadMessage(!0),Q.createCard(e.name,e.link).then((function(e){var t=Z(e);Y.addItem(t),ne.closePopup()})).catch((function(e){console.log(e)})).finally((function(){ne.loadMessage(!1)}))}}),re=new y({selector:".popup_form_edit-avatar",handleFormSubmit:function(e){re.loadMessage(!0),Q.editAvatar(e.avatar).then((function(){W.setAvatar(e),re.closePopup()})).catch((function(e){console.log(e)})).finally((function(){re.loadMessage(!1)}))}}),oe=new O({selector:".popup_type_image"}),ie=function(e,t){oe.openPopup(e,t)};A.addEventListener("click",(function(){X.newPlace.handleToggleButtonState(),X.newPlace.resetValidation(),ne.openPopup(T)})),j.addEventListener("click",(function(){X.editProfile.handleToggleButtonState(),X.editProfile.resetValidation();var e=W.getUserInfo();ee.setInputValues(e),ee.openPopup()})),D.addEventListener("click",(function(){X.editAvatar.handleToggleButtonState(),X.editAvatar.resetValidation(),re.openPopup()})),ee.setEventListeners(),ne.setEventListeners(),oe.setEventListeners(),te.setEventListeners(),re.setEventListeners()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,